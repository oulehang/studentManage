<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.dao.ExamMapper" >
  <resultMap id="BaseResultMap" type="com.student.bean.Exam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="gradeid" property="gradeid" jdbcType="INTEGER" />
    <result column="clazzid" property="clazzid" jdbcType="INTEGER" />
    <result column="courseid" property="courseid" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, time, remark, type, gradeid, clazzid, courseid
  </sql>

  <select id="examListByPage" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from exam WHERE 1=1

    <if test="gradeid != null" >
      AND (gradeid=#{gradeid,jdbcType=INTEGER} AND type=1)
    </if>
    <if test="clazzid != null" >
      OR (clazzid=#{clazzid,jdbcType=INTEGER} AND type=2)
    </if>
  </select>

  <select id="getTeacherExamList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam WHERE 1=1
    <if test="gradeId != null">
      and (gradeid in
      <foreach collection="gradeId" item="item" index="index" open="(" close=")" separator=",">
        #{item}
      </foreach>
      and type=1)
    </if>
    <if test="courseId != null">
      OR  (courseid in
      <foreach collection="courseId" item="item" index="index" open="(" close=")" separator=",">
        #{item}
      </foreach>
      and type=2)
    </if>

  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.student.bean.Exam"  useGeneratedKeys="true" keyProperty="id" >
    insert into exam (id, name, time, 
      remark, type, gradeid, 
      clazzid, courseid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
      #{remark,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{gradeid,jdbcType=INTEGER}, 
      #{clazzid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.student.bean.Exam" >
    update exam
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="gradeid != null" >
        gradeid = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="clazzid != null" >
        clazzid = #{clazzid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.student.bean.Exam" >
    update exam
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      gradeid = #{gradeid,jdbcType=INTEGER},
      clazzid = #{clazzid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>