<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.student.bean.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="clazzid" property="clazzid" jdbcType="INTEGER" />
    <result column="gradeid" property="gradeid" jdbcType="INTEGER" />
    <result column="clazzName" property="clazzName" jdbcType="VARCHAR" />
    <result column="gradeName" property="gradeName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.student.bean.Student" extends="BaseResultMap" >
    <result column="photo" property="photo" jdbcType="LONGVARBINARY" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, number, name, sex, phone, qq, clazzid, gradeid
  </sql>
  <sql id="Blob_Column_List" >
    photo
  </sql>
<select id="getStudentByNumber" resultMap="BaseResultMap" parameterType="String">
  SELECT * FROM student
  WHERE number = #{number,jdbcType=VARCHAR}
</select>
  <select id="getStudentList" resultMap="BaseResultMap" parameterType="com.student.bean.Student">
    select
    grade.name as gradeName,
    clazz.name as clazzName,
    s.id, s.number, s.name, s.sex, s.phone, s.qq, s.clazzid, s.gradeid,s.photo
    FROM student s
    LEFT JOIN grade  on s.gradeid=grade.id
    LEFT JOIN clazz  on s.clazzid=clazz.id
    WHERE 1=1
    <if test="gradeid != 0" >
     AND s.gradeid=#{gradeid,jdbcType=INTEGER}
    </if>
    <if test="clazzid != 0" >
      AND s.clazzid=#{clazzid,jdbcType=INTEGER}
    </if>
    <if test="number != null and number!=''" >
      AND  s.number = #{number,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name!=''" >
      AND  s.name like '%' #{name,jdbcType=VARCHAR} '%'
    </if>
  </select>


  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteStudents" parameterType="map">
    delete from student
    where 1=1
    <if test="ids != null ">
      and id in
      <foreach item="item"  index="index"  open="(" separator=","  close=")" collection="ids">
        #{item}
      </foreach>
    </if>
  </delete>

  <insert id="addStudent" parameterType="com.student.bean.Student"  >
    insert into student (id, number, name, 
      sex, phone, qq, clazzid, 
      gradeid)
    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{clazzid,jdbcType=INTEGER}, 
      #{gradeid,jdbcType=INTEGER})
  </insert>


  <update id="updateByNumber" parameterType="com.student.bean.Student" >
    update student
    <set >

      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
    </set>
    where   number = #{number,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.student.bean.Student" >
    update student
    set
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      clazzid = #{clazzid,jdbcType=INTEGER},
      gradeid = #{gradeid,jdbcType=INTEGER}
    where number = #{number,jdbcType=VARCHAR}
  </update>
</mapper>